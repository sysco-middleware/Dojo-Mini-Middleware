---
- name: Play to start the services of WLS domain
  hosts: dojoserver
  become: true
  become_user: "{{ WLS_USER }}"
  vars_files:
    - '{{ playbook_dir }}/wls_variables.yml'
  tasks:
    - name: Server Details
      tags: always
      block:
        - name: Copy the Python script to CONFIG_HOME to extract the server Details
          copy:
            src: '{{ playbook_dir }}/scripts/weblogic-domain-servers.py'
            dest: '{{ CONFIG_HOME }}'
            owner: '{{ WLS_USER }}'
            group: '{{ WLS_GROUP }}'

        - name: Execute Python to Extract Server Details
          command: python weblogic-domain-servers.py
          args:
            chdir: '{{ CONFIG_HOME}}'
          environment:
            CONFIG_FILE: '{{ CONFIG_FILE }}'
        
        - name: Load server details
          command: cat '{{ CONFIG_HOME}}/serverDetails.txt'
          register: servers

        - name: Debug
          debug: var=servers.stdout 

      
    - name: Lifecycle stop
      tags: stop
      block:
        - name: Stop NodeManager
          tags: stopNodeManager
          ignore_errors: True
          shell:
            "{{ DOMAIN_HOME }}/{{ DOMAIN_NAME }}/bin/stopNodeManager.sh"
        
        - name: Stop Managed Server
          tags: stopAdmin
          ignore_errors: True
          shell: "{%for server in servers.stdout.split('\n') if 'adminserver' not in server|lower %}
            {{ DOMAIN_HOME }}/{{ DOMAIN_NAME }}/bin/stopManagedWebLogic.sh {{ server }}
            {% endfor %}"
     
        - name: Stop Admin Server
          tags: stopAdmin
          ignore_errors: True
          shell: "{% for server in servers.stdout.split('\n') if 'adminserver' in server|lower %}
            {{ DOMAIN_HOME }}/{{ DOMAIN_NAME }}/bin/stopWebLogic.sh
            {% endfor %}"
                
        
          
    - name: Lifecycle start
      tags: start
      block:
        - name: Start the Node Manager
          tags: startNodeManager
          shell:  
            "nohup {{DOMAIN_HOME}}/{{DOMAIN_NAME}}/bin/startNodeManager.sh > {{DOMAIN_HOME}}/{{DOMAIN_NAME}}/bin/startNodeManager.log 2>&1 &"
            
        - name: Start the Weblogic Adminstrator
          tags: startAdmin
          shell: "{% for server in servers.stdout.split('\n') if 'adminserver' in server|lower %}
            nohup {{DOMAIN_HOME}}/{{DOMAIN_NAME}}/bin/startWebLogic.sh > admin-server.out 2>&1 &
             {% endfor %}"
          args:
            chdir: '{{DOMAIN_HOME}}/{{DOMAIN_NAME}}/bin'
        - name: Wait for Admin Port
          wait_for:
            port: 7001
            delay: 30
            timeout: 300

        - name: Start Managed Server
          tags: startManaged
          ignore_errors: True
          shell: "{%for server in servers.stdout.split('\n') if 'adminserver' not in server|lower %}
            nohup ./startManagedWebLogic.sh {{ server }} > {{ server }}.out 2>&1 &
            {% endfor %}"
          args:
            chdir: '{{DOMAIN_HOME}}/{{DOMAIN_NAME}}/bin'
...     
